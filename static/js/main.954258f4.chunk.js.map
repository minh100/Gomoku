{"version":3,"sources":["Global/GlobalRoom/RoomReducer.js","Api/ServerRoomIndex.js","Global/GlobalRoom/GlobalRoomState.js","Global/GlobalUser/UserReducer.js","Api/ServerUserIndex.js","Global/GlobalUser/GlobalUserState.js","Engine/Game.js","Global/GlobalSocket/Socket.js","Components/Lobby/Room/IndividualRoom.js","Components/Lobby/Room/RoomList.js","Components/Lobby/Room/RoomForm.js","Components/Lobby/Lobby.js","Components/Navbar.js","Components/Gomoku/Tile.js","Components/Gomoku/LocalBoard.js","Components/LandingPage/Login.js","Components/LandingPage/SignUp.js","Components/Leaderboard/Leaderboard.js","Components/GameRoom/GameBoard.js","Components/GameRoom/GameRoom.js","App.js","index.js"],"names":["RoomReducer","roomState","action","type","payload","filter","room","_id","map","console","log","SERVER_URL_ROOM","createRoom","newRoom","axios","post","deleteRoom","id","delete","addPlayerToRoom","idOfRoom","updatedPlayerArray","game","patch","then","r","GlobalRoomContext","createContext","GlobalRoomProvider","props","useReducer","dispatch","getAllRooms","a","get","data","createNewRoom","deleteGameRoom","addPlayer","Provider","value","rooms","children","UserReducer","userState","userData","localStorage","setItem","JSON","stringify","removeItem","SERVER_URL_USER","logIn","formData","GlobalUserContext","GlobalUserProvider","getAllUsers","createNewUser","newUser","history","setError","push","login","logout","error","users","Game","size","playerArray","board","currentTurn","winner","draw","win1","win2","this","length","newboard","Array","i","fill","matrixBoard","flat","randomInitalTurn","Math","floor","random","col","row","rearrangedBoard","slice","newGame","flatBoard","count","checkWin","checkDraw","currentRow","currentCol","dirRow","dirCol","playerPiecesCount","SERVER","process","PORT","socket","io","SocketContext","IndividualRoom","useState","passwordInput","setPasswordInput","wrongPassword","setWrongPassword","useContext","useHistory","userAccount","parse","getItem","profileUsername","undefined","userResult","username","result","profile","find","user","className","roomName","aria-hidden","password","name","placeholder","required","autoComplete","onChange","e","target","onClick","emit","gameToJoin","gameObject","handleJoin","xmlns","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","RoomList","roomFilter","setRoomFilter","setFilter","rerender","setRerender","useEffect","roomSearch","toLowerCase","indexOf","scope","sort","b","RoomForm","createCustomGameClicked","toggleCreateCustomGameClicked","isNameTaken","setNameTaken","ratingForWin","ratingForLose","ratingWin","ratingLose","roomData","setRoomData","handleFindGame","gamesAvailable","findingRoomData","charAt","toUpperCase","clearRoomData","handleRandomizeName","onSubmit","preventDefault","taken","htmlFor","maxLength","Lobby","allRooms","setAllRooms","allUsers","setAllUsers","off","on","roomArray","userArray","Navbar","menuOpen","toggleMenuOpen","profileOpen","toggleProfileOpen","location","useLocation","pathname","navOption","setNavOption","aria-controls","aria-expanded","to","aria-current","href","aria-haspopup","dangerouslySetInnerHTML","__html","avatar","role","aria-orientation","aria-labelledby","Tile","handleClick","isWinningPiece","renderSwitch","LocalBoard","gameModel","updateGameModel","toggleRerender","winningPoints","setWinningPoints","click","res","findWinningPoints","tile","setupNewGame","rise","run","array","slope","Login","loginData","setloginData","rel","aria-label","SignUp","confirmPassword","setConfirmPassword","lowerUsername","rating","createData","setCreateData","noMatch","setNoMatch","getAvatar","Leaderboard","userFilter","setUserFilter","userSearch","allNewUsers","GameBoard","currentRoom","gameInstance","updatedGame","GameRoom","state","getInit","setTimeout","checkIfValidUser","updatedRoom","some","goBack","player","App","basename","path","component","exact","forceRefresh","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.954258f4.chunk.js","sourcesContent":["export default function RoomReducer(roomState, action) {\r\n    switch(action.type) {\r\n        case 'FETCH_ALL_ROOMS':\r\n            return action.payload;\r\n        case 'CREATE_ROOM':\r\n            return [...roomState, action.payload];\r\n        case 'DELETE_ROOM':\r\n            return roomState.filter(room => room._id !== action.payload);\r\n        case 'ADD_PLAYER_TO_ROOM':\r\n            return roomState.map(room => {\r\n                console.log(action);\r\n                return room._id === action.payload._id ? \r\n                action.payload : room\r\n            });\r\n        default:\r\n            return roomState;\r\n    }\r\n}","/**\r\n * this file is essentially used to communicate with the server\r\n * handles all methods dealing with rooms\r\n */\r\nimport axios from 'axios';\r\n\r\n\r\nconst SERVER_URL_ROOM = 'https://gomoku0server.herokuapp.com/rooms';    // url for deployment\r\n// const SERVER_URL_ROOM = 'http://localhost:4001/rooms';               // url for development\r\n\r\n// fetches all rooms from server\r\nexport const fetchAllRooms = () => {\r\n    return axios.get(SERVER_URL_ROOM);\r\n}\r\n\r\n// creates a room and adds to server\r\nexport const createRoom = (newRoom) => {\r\n    return axios.post(SERVER_URL_ROOM, newRoom);\r\n}\r\n\r\n// deletes a room from server\r\nexport const deleteRoom = (id) => {\r\n    return axios.delete(`${SERVER_URL_ROOM}/${id}`);\r\n}\r\n\r\n// updates room with a new player\r\nexport const addPlayerToRoom = (idOfRoom, updatedPlayerArray, game) => {\r\n    axios.patch(`${SERVER_URL_ROOM}/${idOfRoom}`, (updatedPlayerArray, game))\r\n        .then(r => {\r\n            return r;\r\n        })\r\n}\r\n","import React, { createContext, useReducer } from 'react'\r\nimport RoomReducer from './RoomReducer.js';\r\n\r\nimport { fetchAllRooms, createRoom, deleteRoom, addPlayerToRoom } from '../../Api/ServerRoomIndex.js';\r\n\r\nexport const GlobalRoomContext = createContext([]);\r\n\r\nexport const GlobalRoomProvider = props => {\r\n    const [roomState, dispatch] = useReducer(RoomReducer, []);\r\n\r\n    // room actions\r\n    // get all rooms in database\r\n    const getAllRooms = async () => {\r\n        try {\r\n            const { data } = await fetchAllRooms();\r\n            dispatch({ type: 'FETCH_ALL_ROOMS', payload: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    // creating new room\r\n    const createNewRoom = async (newRoom) => {\r\n        try {\r\n            const { data } = await createRoom(newRoom);\r\n            dispatch({ type: 'CREATE_ROOM', payload: data });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    // delete room\r\n    const deleteGameRoom = async(id) => {\r\n        try {\r\n            await deleteRoom(id);\r\n            dispatch({type: 'DELETE_ROOM', payload: id});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    // add player to room\r\n    const addPlayer = async(idOfRoom, updatedPlayerArray, game) => {\r\n        try {\r\n            const {data} = await addPlayerToRoom(idOfRoom, updatedPlayerArray, game);\r\n            dispatch({type: 'ADD_PLAYER_TO_ROOM', payload: data});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <GlobalRoomContext.Provider\r\n            value={{\r\n                rooms: roomState,\r\n                getAllRooms,\r\n                createNewRoom,\r\n                deleteGameRoom,\r\n                addPlayer\r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalRoomContext.Provider>\r\n    )\r\n}","export default function UserReducer(userState = {userData: null}, action) {\r\n    switch(action.type) {\r\n        case 'FETCH_ALL_USERS':\r\n            return action.payload;\r\n        case 'CREATE_USER':\r\n        case 'LOGIN':\r\n            localStorage.setItem('profile', JSON.stringify(action?.data));\r\n            return {...userState, userData: action?.data};\r\n        case 'LOGOUT':\r\n            localStorage.removeItem('profile');\r\n            return {...userState, userData: null};\r\n        default:\r\n            return userState;\r\n    }\r\n}","/**\r\n * this file is essentially used to communicate with the server\r\n * handles all methods dealing with users\r\n */\r\nimport axios from 'axios';\r\n\r\nconst SERVER_URL_USER = 'https://gomoku0server.herokuapp.com/users'     // url for deployment\r\n// const SERVER_URL_USER = 'http://localhost:4001/users';                  // url for development\r\n\r\nexport const fetchAllUsers = () => {\r\n    return axios.get(SERVER_URL_USER);\r\n}\r\n\r\nexport const logIn = (formData) => {\r\n    return axios.post(`${SERVER_URL_USER}/login`, formData);\r\n}\r\n\r\nexport const signUp = (formData) => {\r\n    return axios.post(`${SERVER_URL_USER}/signup`, formData);\r\n}","import React, { createContext, useReducer } from 'react'\r\nimport UserReducer from './UserReducer.js';\r\n\r\nimport { fetchAllUsers, logIn, signUp } from '../../Api/ServerUserIndex.js';\r\n\r\nexport const GlobalUserContext = createContext([]);\r\n\r\nexport const GlobalUserProvider = props => {\r\n    const [userState, dispatch] = useReducer(UserReducer, []);\r\n\r\n    // user actions\r\n    const getAllUsers = async() => {\r\n        try {\r\n            const {data} = await fetchAllUsers();\r\n            dispatch({type: 'FETCH_ALL_USERS', payload: data});\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // create a new user\r\n    const createNewUser = async (newUser, history, setError) => {\r\n        try {\r\n            const {data} = await signUp(newUser);\r\n            dispatch({type: 'CREATE_USER', data});\r\n            history.push('/');\r\n        } catch (error) {\r\n            setError(true);\r\n        }\r\n    };\r\n\r\n    // login user\r\n    const login = async (formData, history, setError) => {\r\n        try {\r\n            const { data } = await logIn(formData);\r\n            dispatch({type: 'LOGIN', data});\r\n            history.push('/');\r\n        } catch(error) {\r\n            setError(true);\r\n        }\r\n    }\r\n\r\n    // log out user\r\n    const logout = async () => {\r\n        try {\r\n            dispatch({type: \"LOGOUT\"});\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <GlobalUserContext.Provider\r\n            value={{\r\n                users: userState,\r\n                getAllUsers,\r\n                createNewUser,\r\n                login,\r\n                logout,\r\n                \r\n            }}\r\n        >\r\n            {props.children}\r\n        </GlobalUserContext.Provider>\r\n    )\r\n}","export default class Game {\r\n\r\n    constructor(size, playerArray, board, currentTurn, winner, draw, win1, win2) {\r\n        this.size = size;\r\n        this.playerArray = playerArray;\r\n\r\n        if (board.length === 0) {\r\n            let newboard = new Array(size);\r\n            for (let i = 0; i < newboard.length; i++) {\r\n                newboard[i] = new Array(size).fill(-1);\r\n            }\r\n            this.matrixBoard = newboard;\r\n            this.board = newboard.flat();\r\n\r\n            // first, randomly chooses the starting player\r\n            let randomInitalTurn = Math.floor(Math.random() * playerArray.length);\r\n\r\n            // used to decide whose turn is it currently\r\n            this.currentTurn = randomInitalTurn\r\n\r\n            this.winner = -1;   // if a player won assign them as winner\r\n            this.draw = false;      // if game is draw\r\n\r\n            // end point of winning pieces\r\n            this.win1 = {\r\n                col: 0,\r\n                row: 0\r\n            };\r\n\r\n            // starting point of winning pieces\r\n            this.win2 = {\r\n                col: 0,\r\n                row: 0\r\n            }\r\n        } else {\r\n            let rearrangedBoard = [];\r\n            for (let row = 0; row < 224; row += 15) {\r\n                rearrangedBoard.push(board.slice(row, row + 15))\r\n            }\r\n\r\n            this.board = rearrangedBoard;\r\n\r\n            // used to decide whose turn is it currently\r\n            this.currentTurn = currentTurn\r\n\r\n            this.winner = winner;   // if a player won assign them as winner\r\n            this.draw = draw;      // if game is draw\r\n\r\n            // end point of winning pieces\r\n            this.win1 = win1;\r\n\r\n            // starting point of winning pieces\r\n            this.win2 = win2;\r\n        }\r\n\r\n    };\r\n\r\n    /**\r\n     * Resets the game \r\n     */\r\n    setupNewGame() {\r\n        let newGame = new Game(this.size, this.playerArray, [], 0, -1, false, {}, {});\r\n        this.board = newGame.board;\r\n        this.currentTurn = newGame.currentTurn;\r\n        this.winner = -1;\r\n        this.draw = false;\r\n        this.win1 = {\r\n            col: 0,\r\n            row: 0\r\n        };\r\n        this.win2 = {\r\n            col: 0,\r\n            row: 0\r\n        }\r\n        this.flatBoard = newGame.flatBoard;\r\n    }\r\n\r\n    /**\r\n     * Handles what happens when a tile is clicked on\r\n     * @param {number} row \r\n     * @param {number} col \r\n     */\r\n    click(row, col) {\r\n        if (this.winner === -1 && !this.draw) {  // check if game is over\r\n            if (this.board[row][col] === -1) {  // check if space clicked is a valid space\r\n                this.board[row][col] = this.currentTurn\r\n                if (checkWin(this.board, row, col, this.currentTurn, this.win1, this.win2)) {\r\n                    this.winner = this.currentTurn;\r\n                }\r\n                else if (checkDraw(this.board)) {\r\n                    this.draw = true;\r\n                }\r\n                else {  // update currentTurn to next player\r\n                    if (this.currentTurn !== this.playerArray.length - 1) {\r\n                        this.currentTurn++;\r\n                    } else {\r\n                        this.currentTurn = 0;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * Checks to see if a player's piece count is >= 5 in order to win\r\n *      goes through every direction to check\r\n *      since 2d array start at top left we have to adjust values to go in the correct direction\r\n * @param {2d number array} board represents the board\r\n * @param {number} row represents the current row\r\n * @param {number} col represents the current column\r\n * @param {numer} currentTurn represents the current player\r\n * @returns {boolean}true if a player has won else false\r\n */\r\nexport function checkWin(board, row, col, currentTurn, win1, win2) {\r\n    // checks vertically\r\n    if (count(board, row, col, currentTurn, -1, 0, win1, win2) >= 5) {\r\n        return true;\r\n    }\r\n\r\n    // // checks positive slope\r\n    if (count(board, row, col, currentTurn, -1, 1, win1, win2) >= 5) {\r\n        return true;\r\n    }\r\n\r\n    // // checks negative slope\r\n    if (count(board, row, col, currentTurn, -1, -1, win1, win2) >= 5) {\r\n        return true;\r\n    }\r\n\r\n    // // checks horizontally\r\n    if (count(board, row, col, currentTurn, 0, -1, win1, win2) >= 5) {\r\n        return true;\r\n    }\r\n\r\n    return false\r\n}\r\n\r\n/**\r\n * Counts the number of a player's pieces in a given direction\r\n *      starts at (currentRow, currentCol) and moves both fowards and backwards in the given dirRow, dirCol\r\n * @param {2d number array} board represents the board\r\n * @param {number} currentRow represents the current row\r\n * @param {number} currentCol represents the current column\r\n * @param {number} currentTurn represents the current player\r\n * @param {number} dirRow represents the horizontal direction to go in\r\n * @param {number} dirCol represents the vertical direction to go in\r\n * @returns {array} the number of pieces in a given direction, win1, win2\r\n */\r\nexport function count(board, currentRow, currentCol, currentTurn, dirRow, dirCol, win1, win2) {\r\n    let playerPiecesCount = 1;\r\n\r\n    let row = currentRow + dirRow;\r\n    let col = currentCol + dirCol;\r\n    while (row >= 0 && row < board.length && col >= 0 && col < board.length && board[row][col] === currentTurn) {\r\n        playerPiecesCount++;\r\n        row += dirRow;\r\n        col += dirCol;\r\n    };\r\n\r\n    // set top positions of win pieces\r\n    // row is row\r\n    // col is col\r\n    win1.row = row - dirRow;\r\n    win1.col = col - dirCol;\r\n\r\n    row = currentRow - dirRow;\r\n    col = currentCol - dirCol;\r\n    while (row >= 0 && row < board.length && col >= 0 && col < board.length && board[row][col] === currentTurn) {\r\n        playerPiecesCount++;\r\n        row -= dirRow;\r\n        col -= dirCol;\r\n    };\r\n\r\n    // set bottom positions of win pieces\r\n    win2.row = row + dirRow;\r\n    win2.col = col + dirCol;\r\n\r\n    // return [playerPiecesCount, win1, win2];\r\n    return playerPiecesCount;\r\n}\r\n\r\n/**\r\n * Checks to see if the game has ended in a draw\r\n *      Goes through every piece on the board to see if it is empty\r\n * @param {2d number array} board represents the board\r\n * @returns false if there is an empty space on the board\r\n */\r\nexport function checkDraw(board) {\r\n    for (let row = 0; row < board.length; row++) {\r\n        for (let col = 0; col < board.length; col++) {\r\n            if (board[row][col] === -1) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}","import { createContext } from 'react';\r\nimport io from 'socket.io-client';\r\n\r\nconst SERVER = process.env.PORT || 'http://localhost:4001';\r\n\r\nexport const socket = io(SERVER);\r\nexport const SocketContext = createContext(socket);","import React, { useState, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Game from '../../../Engine/Game.js';\r\n\r\nimport { GlobalUserContext } from '../../../Global/GlobalUser/GlobalUserState.js';\r\nimport { SocketContext } from '../../../Global/GlobalSocket/Socket.js';\r\n\r\nimport './IndividualRoom.css';\r\n\r\nexport const IndividualRoom = ({ room }) => {\r\n\r\n    const [passwordInput, setPasswordInput] = useState(\"\");\r\n    const [wrongPassword, setWrongPassword] = useState(false);\r\n    const socket = useContext(SocketContext);\r\n    const history = useHistory();\r\n\r\n    // local storage results\r\n    const { users } = useContext(GlobalUserContext);\r\n    const userAccount = useState(JSON.parse(localStorage.getItem('profile')));\r\n    if(userAccount[0] !== null) {\r\n        var profileUsername = userAccount[0].userResult !== undefined ? userAccount[0].userResult.username : userAccount[0].result.username;\r\n        console.log('users', users);\r\n    }\r\n    var profile = users.find(user => user.username === profileUsername);\r\n\r\n    const handleJoin = () => {\r\n        if (passwordInput === room.password && room.playerArray.length !== 2) {\r\n            // add user to room\r\n            room.playerArray.push(profile);\r\n            console.log('handleJoin', room);\r\n            console.log('room id ', room._id);\r\n\r\n            let game = new Game(15, room.playerArray, [], 0, -1, false, {}, {}, 0, 0);\r\n            // rerender to room\r\n            socket.emit('updateRoom', ({ gameToJoin: room, gameObject: game }));\r\n            history.push(`/play/${room.roomName}`, [room.roomName, room.playerArray]);\r\n            setWrongPassword(false);\r\n        } else {\r\n            setWrongPassword(true);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr>\r\n                <td className=\"px-8 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                    <div className=\"flex items-center\">\r\n                        <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                            {room.roomName}\r\n                        </p>\r\n                    </div>\r\n                </td>\r\n                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                    <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                        {room.playerArray.length}/2\r\n                    </p>\r\n                </td>\r\n                <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm flex w-25 justify-between\">\r\n                    <span className=\"relative inline-block px-3 py-1 font-semibold text-green-900 leading-tight\">\r\n                        <span aria-hidden=\"true\" className=\"absolute inset-0 bg-green-200 opacity-50 rounded-full\">\r\n                        </span>\r\n                        <span className=\"relative\">\r\n                            {room.password !== '' ? \"Required\" : \"None\"}\r\n                        </span>\r\n                    </span>\r\n                    {\r\n                        room.password !== \"\" && (\r\n                            <input type=\"text\" name=\"password\"\r\n                                className=\"focus:outline-none focus:ring-2 focus:ring-blue-600 block w-1/2 pl-2 sm:text-sm border-gray-300 rounded-md\"\r\n                                placeholder=\"password...\"\r\n                                required=\"on\"\r\n                                autoComplete=\"off\"\r\n                                value={passwordInput}\r\n                                onChange={(e) => setPasswordInput(e.target.value)}\r\n                            >\r\n                            </input>\r\n                        )\r\n                    }\r\n                </td>\r\n                {\r\n                    (userAccount[0] !== undefined && userAccount[0] !== null) ? (room.playerArray.length !== 2) ? (\r\n                        <td className=\"px-5 pb-5 pt-3 border-b border-gray-200 bg-white text-sm\">\r\n                            <button className=\"flex-shrink-0 px-4 py-1 pb-2 text-base font-semibold text-white bg-purple-600 rounded-lg shadow-md hover:bg-purple-700 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-purple-200\"\r\n                                onClick={() => handleJoin()}\r\n                            >\r\n                                Join\r\n                            </button>\r\n                        </td>\r\n                    ) : <td className=\"px-5 pb-5 pt-3 border-b border-gray-200 bg-white text-sm\">\r\n                        <div className=\"flex-shrink-0 text-center px-4 py-1 pb-2 text-base font-semibold text-white bg-yellow-400 rounded-lg shadow-md\">\r\n                            In Game\r\n                            </div>\r\n                    </td> : <></>\r\n                }\r\n            </tr>\r\n            {wrongPassword ? (\r\n                <div className=\"notification\">\r\n                    <div className={\"text-white px-6 py-4 border-0 rounded relative mb-4 bg-red-500\"}>\r\n                        <span className=\"text-xl inline-block mr-5 align-middle\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                            </svg>\r\n                        </span>\r\n                        <span className=\"inline-block align-middle mr-8\">\r\n                            Wrong Password\r\n                    </span>\r\n                        <button\r\n                            className=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-6 outline-none focus:outline-none\"\r\n                            onClick={() => setWrongPassword(false)}\r\n                        >\r\n                            <span>×</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\n\r\nimport { IndividualRoom } from './IndividualRoom.js';\r\n\r\nexport const RoomList = ({ rooms }) => {\r\n\r\n    const [roomFilter, setRoomFilter] = useState(rooms);\r\n    const [filter, setFilter] = useState(\"\");\r\n    const [rerender, setRerender] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setRoomFilter(rooms);\r\n        if (filter !== \"\") {\r\n            let roomSearch = rooms.filter(room => room.roomName.toLowerCase().indexOf(filter.toLowerCase()) !== -1)\r\n            setRoomFilter(roomSearch);\r\n        }\r\n    }, [filter, rerender]);\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 sm:px-0 max-w-5xl\">\r\n            <div className=\"py-8\">\r\n                <div className=\"flex flex-row mb-1 sm:mb-0 justify-between w-full\">\r\n                    <h2 className=\"pl-2 text-2xl leading-tight font-bold\">\r\n                        List of Rooms\r\n                    </h2>\r\n                    <div className=\"text-end pr-2\">\r\n                        <form className=\"flex w-full max-w-sm space-x-3\">\r\n                            <button className=\"flex-shrink-0 px-4 py-2 text-base font-semibold text-white bg-purple-600 rounded-lg shadow-md flex justify-center items-center\"\r\n                                onClick={() => setRerender(!rerender)}\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\" />\r\n                                </svg>\r\n                            </button>\r\n                            <div className=\" relative \">\r\n                                <input type=\"text\" id=\"&quot;form-subscribe-Filter\" className=\"rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                                    placeholder=\"room...\"\r\n                                    autoComplete=\"off\"\r\n                                    value={filter}\r\n                                    onChange={(e) => setFilter(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-hidden\">\r\n                    <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n                        <table className=\"min-w-full leading-normal\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"pl-8 py-3 bg-white font-semibold border-b border-gray-300 text-gray-800 text-left text-sm uppercase\">\r\n                                        Room\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-4 py-3 bg-white font-semibold border-b border-gray-300 text-gray-800 text-left text-sm uppercase\">\r\n                                        Player Count\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-5 py-3 bg-white font-semibold border-b border-gray-300 text-gray-800 text-left text-sm uppercase\">\r\n                                        Password\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-5 py-3 bg-white border-b border-gray-300 text-gray-800  text-left text-sm uppercase font-normal\">\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    rooms && roomFilter.length !== 0 ? (\r\n                                        roomFilter.sort((a, b) => a.playerArray.length - b.playerArray.length)\r\n                                            .map(room => {\r\n                                                return <IndividualRoom key={room._id}\r\n                                                    room={room}\r\n                                                />\r\n                                            })\r\n                                    ) : (\r\n                                        rooms.sort((a, b) => a.playerArray.length - b.playerArray.length)\r\n                                            .map(room => {\r\n                                                return <IndividualRoom key={room._id}\r\n                                                    room={room}\r\n                                                />\r\n                                            })\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}","import React, { useState, useContext } from 'react'\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Game from '../../../Engine/Game.js';\r\n\r\nimport { GlobalUserContext } from '../../../Global/GlobalUser/GlobalUserState.js';\r\nimport { GlobalRoomContext } from '../../../Global/GlobalRoom/GlobalRoomState.js';\r\nimport { SocketContext } from '../../../Global/GlobalSocket/Socket.js';\r\n\r\nimport './RoomForm.css';\r\n\r\nexport const RoomForm = ({users}) => {\r\n\r\n    // const { users } = useContext(GlobalUserContext);\r\n    const { rooms, createNewRoom } = useContext(GlobalRoomContext);\r\n    const [createCustomGameClicked, toggleCreateCustomGameClicked] = useState(false);\r\n    const [isNameTaken, setNameTaken] = useState(false);\r\n    const socket = useContext(SocketContext);\r\n    const history = useHistory();\r\n\r\n    const ratingForWin = Math.floor(Math.random() * 6) + 20;  // [20, 25]\r\n    const ratingForLose = Math.floor(Math.random() * 6) + 20;   // [20, 25]\r\n\r\n    // local storage results\r\n    const userAccount = useState(JSON.parse(localStorage.getItem('profile')));\r\n    if(userAccount[0] !== null) {\r\n        var profileUsername = userAccount[0].userResult !== undefined ? userAccount[0].userResult.username : userAccount[0].result.username;\r\n    }\r\n    console.log('users', users);\r\n    var profile = users.find(user => user.username === profileUsername);\r\n\r\n\r\n    const setInitalState = () => {\r\n        if (userAccount[0] === null) {\r\n            return {\r\n                roomName: '',\r\n                password: '',\r\n                playerArray: [],\r\n                ratingWin: ratingForWin,\r\n                ratingLose: ratingForLose\r\n            }\r\n        } else {\r\n            return {\r\n                roomName: '',\r\n                password: '',\r\n                playerArray: [profile],\r\n                ratingWin: ratingForWin,\r\n                ratingLose: ratingForLose\r\n            }\r\n        };\r\n    }\r\n\r\n    const [roomData, setRoomData] = useState(setInitalState);\r\n    /**\r\n     * Find a game to join, if no games then create one\r\n     */\r\n    const handleFindGame = async(e) => {\r\n        // check if any games are available\r\n        const gamesAvailable = rooms.filter(room => room.playerArray.length < 2);\r\n        if (gamesAvailable.length !== 0) {                           // some games available\r\n            const gameToJoin = gamesAvailable[0];                   // take the first game\r\n            gameToJoin.playerArray.push(profile);\r\n            let game = new Game(15, gameToJoin.playerArray, [], 0, -1, false, {}, {}, 0, 0);\r\n            socket.emit('updateRoom', ({ 'gameToJoin': gameToJoin, gameObject: game }));\r\n            history.push(`/play/${gameToJoin.roomName}`, [gameToJoin.roomName, gameToJoin.playerArray]);\r\n        } else {\r\n            // if no games are available\r\n            // randomize roomName\r\n            // set room data with randomize roomName, no password, and player array with current user in\r\n            // call create create game function\r\n            let findingRoomData = roomData;\r\n            const {data} = await axios.get('https://random-word-api.herokuapp.com/word?number=2');\r\n            findingRoomData = { ...findingRoomData, \r\n                roomName: `${data[0].charAt(0).toUpperCase() + data[0].slice(1)}${data[1].charAt(0).toUpperCase() + data[1].slice(1)}`,\r\n                playerArray: [profile]\r\n            }\r\n            createNewRoom(findingRoomData);\r\n            socket.emit('gameCreated', findingRoomData);\r\n            history.push(`/play/${findingRoomData.roomName}`, [findingRoomData.roomName, findingRoomData.playerArray]); // redirects user to game room\r\n            clearRoomData();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Create a custom game \r\n     * Checks to see if the roomName is already in use\r\n     */\r\n    const handleCreateGame = (e) => {\r\n        e.preventDefault();\r\n        let taken = false;\r\n\r\n        for (let i = 0; i < rooms.length; i++) {\r\n            if (rooms[i].roomName.toLowerCase() === roomData.roomName.toLowerCase()) {\r\n                taken = true;\r\n                setNameTaken(true);\r\n                break;\r\n            }\r\n        }\r\n        if (!taken) {\r\n            console.log(\"emitted and created Game\", roomData)\r\n            createNewRoom(roomData);\r\n            socket.emit('gameCreated', roomData);\r\n            history.push(`/play/${roomData.roomName}`, [roomData.roomName, roomData.playerArray]); // redirects user to game room\r\n            toggleCreateCustomGameClicked(false)\r\n            clearRoomData();\r\n        }\r\n    };\r\n\r\n    /**\r\n     * Creates a random name as the roomName\r\n     */\r\n    const handleRandomizeName = async () => {\r\n        const {data} = await axios.get('https://random-word-api.herokuapp.com/word?number=2');\r\n\r\n        setRoomData({ ...roomData, \r\n            roomName: `${data[0].charAt(0).toUpperCase() + data[0].slice(1)}${data[1].charAt(0).toUpperCase() + data[1].slice(1)}`,\r\n            playerArray: [profile]\r\n        });\r\n    };\r\n\r\n    /**\r\n     * Clears the data after successfully creating a game or cancelling\r\n     */\r\n    const clearRoomData = () => {\r\n        setNameTaken(false);\r\n        setRoomData({\r\n            roomName: '',\r\n            password: '',\r\n        })\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {\r\n                ((userAccount[0] !== undefined && userAccount[0] !== null)) ? (\r\n                    <div className=\"grid gap-4 row-gap-3 sm:grid-cols-2 lg:grid-cols-2\">\r\n                        <div className=\"room-form-bottons flex flex-col justify-between p-5 border rounded-lg shadow-md\"\r\n                            onClick={(e) => handleFindGame(e)}\r\n                        >\r\n                            <div className=\"flex\">\r\n                                <div className=\"flex items-center justify-center w-12 h-12 mb-4 pr-3 pl-3 rounded-full bg-indigo-50\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"black\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\" />\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"pl-7 sm:pr-9 sm:pt-6 sm:pl-0\">\r\n                                    <h6 className=\"mb-2 font-semibold leading-5 text-xl\">Find a Game</h6>\r\n                                    <p className=\"mb-3 text-sm text-gray-900\">\r\n                                        Join an available game. If no games are available then a new game will be created.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"room-form-bottons flex flex-col justify-between p-5 border rounded-lg shadow-md\"\r\n                            onClick={() => toggleCreateCustomGameClicked(true)}\r\n                        >\r\n                            <div className=\"flex\">\r\n                                <div className=\"flex items-center justify-center w-12 h-12 mb-4 pr-3 pl-3 rounded-full bg-indigo-50\">\r\n                                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"black\">\r\n                                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\" />\r\n                                    </svg>\r\n                                </div>\r\n                                <div className=\"pl-7 sm:pr-2 sm:pt-6 sm:pl-0\">\r\n                                    <h6 className=\"mb-2 font-semibold leading-5 text-xl\">Create Custom Game</h6>\r\n                                    <p className=\"mb-3 text-sm text-gray-900\">\r\n                                        Make your own game and invite or wait for others to join.\r\n                                    </p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"text-white px-6 py-4 border-0 rounded relative mb-4 bg-purple-600 flex justify-center\">\r\n                        <span className=\"text-xl inline-block mr-5 align-middle\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />\r\n                            </svg>\r\n                        </span>\r\n                        <span className=\"inline-block align-middle mr-8 text-base font-semibold\">\r\n                            LOGIN TO PLAY AGAINST OTHERS\r\n                        </span>\r\n                    </div>\r\n                )\r\n            }\r\n            {\r\n                createCustomGameClicked && (\r\n                    <>\r\n                        <div className=\"opacity-25 fixed inset-0 z-40 bg-black\"></div>\r\n                        <div className=\"justify-center items-center flex overflow-x-hidden overflow-y-auto fixed inset-0 z-50 outline-none focus:outline-none\">\r\n                            <div className=\"relative w-auto my-6 mx-auto max-w-3xl\">\r\n                                {/*content*/}\r\n                                <form onSubmit={handleCreateGame} className=\"border-0 rounded-lg shadow-lg relative flex flex-col w-full bg-white outline-none focus:outline-none\">\r\n                                    {/*header*/}\r\n                                    <div className=\"flex items-start justify-between p-5 border-b border-solid border-blueGray-200 rounded-t\">\r\n                                        <h3 className=\"text-3xl font-semibold\">\r\n                                            Creating Custom Game\r\n                                        </h3>\r\n                                    </div>\r\n                                    {/*body*/}\r\n                                    <div className=\"relative p-6 grid grid-rows-2 gap-y-2.5\">\r\n                                        <div className=\"grid grid-cols-2\">\r\n                                            {isNameTaken ? (\r\n                                                <label htmlFor=\"roomName\" className=\"block text-sm font-medium text-red-700 pr-2\">Room Name is taken</label>\r\n                                            ) : (\r\n                                                <label htmlFor=\"roomName\" className=\"block text-sm font-medium text-gray-700 pr-2\">Room Name</label>\r\n                                            )}\r\n                                            <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                                                <input type=\"text\" name=\"roomName\"\r\n                                                    className=\"focus:outline-none focus:ring-2 focus:ring-blue-600 block w-full pl-12 pr-12 sm:text-sm border-gray-300 rounded-md\"\r\n                                                    placeholder=\"room name...\"\r\n                                                    required\r\n                                                    maxLength=\"26\"\r\n                                                    autoComplete=\"off\"\r\n                                                    value={roomData.roomName}\r\n                                                    onChange={(e) => setRoomData({ ...roomData, roomName: e.target.value })}\r\n                                                >\r\n                                                </input>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"grid grid-cols-2\">\r\n                                            <label htmlFor=\"password\" className=\"block text-sm font-medium text-gray-700 pr-2\" autoComplete=\"off\">Password (optional)</label>\r\n                                            <div className=\"mt-1 relative rounded-md shadow-sm\">\r\n                                                <input type=\"text\" name=\"password\" className=\"focus:outline-none focus:ring-2 focus:ring-blue-600 block w-full pl-12 pr-12 sm:text-sm border-gray-300 rounded-md\"\r\n                                                    placeholder=\"password...\"\r\n                                                    autoComplete=\"off\"\r\n                                                    value={roomData.password}\r\n                                                    onChange={(e) => setRoomData({ ...roomData, password: e.target.value })}\r\n                                                >\r\n                                                </input>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    {/*footer*/}\r\n                                    <div className=\"grid grid-cols-2\">\r\n                                        <div className=\"flex items-center justify-start p-4\">\r\n                                            <button\r\n                                                className=\"bg-blue-500 text-white font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                                                type=\"button\"\r\n                                                onClick={() => {\r\n                                                    handleRandomizeName()\r\n                                                }}\r\n                                            >\r\n                                                Randomize Name\r\n                                            </button>\r\n                                        </div>\r\n                                        <div className=\"flex items-center justify-end p-4 border-t border-solid border-blueGray-200 rounded-b\">\r\n                                            <button\r\n                                                className=\"bg-green-500 text-white active:bg-emerald-600 font-bold uppercase text-sm px-6 py-3 rounded shadow hover:shadow-lg outline-none focus:outline-none mr-1 mb-1 ease-linear transition-all duration-150\"\r\n                                                type=\"submit\"\r\n                                            >\r\n                                                Create Game\r\n                                            </button>\r\n                                            <button\r\n                                                className=\"text-red-500 background-transparent font-bold uppercase px-6 py-2 text-sm outline-none hover:shadow-lg focus:outline-none mr-1 mb-1 ease-linear transition-all\"\r\n                                                type=\"button\"\r\n                                                onClick={() => {\r\n                                                    toggleCreateCustomGameClicked(false);\r\n                                                    clearRoomData();\r\n                                                }}\r\n                                            >\r\n                                                Cancel\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { RoomList } from './Room/RoomList.js';\r\nimport { RoomForm } from './Room/RoomForm.js';\r\n\r\nimport { GlobalRoomContext } from '../../Global/GlobalRoom/GlobalRoomState.js';\r\nimport { GlobalUserContext } from '../../Global/GlobalUser/GlobalUserState.js';\r\nimport { SocketContext } from '../../Global/GlobalSocket/Socket.js';\r\n\r\nexport const Lobby = () => {\r\n\r\n  const { getAllRooms } = useContext(GlobalRoomContext);\r\n  const { getAllUsers } = useContext(GlobalUserContext);\r\n  const socket = useContext(SocketContext);\r\n  const [allRooms, setAllRooms] = useState([]);\r\n  const [allUsers, setAllUsers] = useState([]);\r\n\r\n  useEffect(() => {\r\n    getAllRooms();\r\n    getAllUsers();\r\n\r\n    socket.emit('joinLobby');\r\n\r\n    return () => {\r\n      socket.off('joinLobby');\r\n    }\r\n  }, [socket]);\r\n\r\n  useEffect(() => {\r\n    socket.on('lobby', ({roomArray, userArray}) => {\r\n      setAllRooms(roomArray);\r\n      setAllUsers(userArray);\r\n      getAllRooms();\r\n      getAllUsers();\r\n    })\r\n\r\n    return () => {\r\n      socket.off('lobby');\r\n    }\r\n  }, [allRooms, socket]);\r\n\r\n  return (\r\n    <div className=\"px-4 py-8 mx-auto sm:max-w-xl md:max-w-full lg:max-w-screen-xl md:px-24 lg:px-8 lg:py-10\">\r\n      <div className=\"max-w-xl mb-10 md:mx-auto sm:text-center lg:max-w-2xl md:mb-12\">\r\n        <RoomForm users={allUsers}/>\r\n      </div>\r\n      {\r\n        <RoomList rooms={allRooms} />\r\n      }\r\n    </div>\r\n  );\r\n\r\n};\r\n","import React, { useState, useContext, useEffect } from 'react'\r\n\r\nimport { Link, useHistory, useLocation } from 'react-router-dom';\r\nimport { GlobalUserContext } from '../Global/GlobalUser/GlobalUserState.js';\r\n\r\nexport const Navbar = () => {\r\n\r\n    const [menuOpen, toggleMenuOpen] = useState(false); // mobile menu\r\n    const [profileOpen, toggleProfileOpen] = useState(false);   // profile menu\r\n    \r\n    const history = useHistory();\r\n    const { logout } = useContext(GlobalUserContext);\r\n\r\n    // local storage results \r\n    const userAccount = useState(JSON.parse(localStorage.getItem('profile')));\r\n\r\n    const location = useLocation();\r\n    const [navOption, setNavOption] = useState(location.pathname);\r\n    useEffect(() => {\r\n        setNavOption(location.pathname);\r\n    }, [location.pathname])\r\n\r\n    const handleSignOut = () => {\r\n        logout();\r\n        toggleProfileOpen(false);\r\n        history.push(\"/login\");\r\n    };\r\n\r\n    return (\r\n        <nav className=\"bg-gray-800\">\r\n            <div className=\"max-w-7xl mx-auto px-2 sm:px-6 lg:px-8\">\r\n                <div className=\"relative flex items-center justify-between h-16\">\r\n                    <div className=\"absolute inset-y-0 left-0 flex items-center sm:hidden\">\r\n                        {/* <!-- Mobile menu button--> */}\r\n                        <button type=\"button\"\r\n                            className=\"inline-flex items-center justify-center p-2 rounded-md text-gray-400 hover:text-white hover:bg-gray-700 focus:outline-none focus:ring-2 focus:ring-inset focus:ring-white\"\r\n                            aria-controls=\"mobile-menu\"\r\n                            aria-expanded=\"false\"\r\n                            onClick={() => toggleMenuOpen(!menuOpen)}\r\n                        >\r\n                            {/* <!--Icon when menu is closed. * Heroicon name: outline/menu * Menu open: \"hidden\", * Menu closed: \"block\"--> */}\r\n                            <svg className=\"block h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M4 6h16M4 12h16M4 18h16\" />\r\n                            </svg>\r\n                            {/* <!--Icon when menu is open. * Heroicon name: outline/x * Menu open: \"block\", * Menu closed: \"hidden\"--> */}\r\n                            <svg className=\"hidden h-6 w-6\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\" aria-hidden=\"true\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                            </svg>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"flex-1 flex items-center justify-center sm:items-stretch sm:justify-start\">\r\n                        {/* Logo */}\r\n                        <div className=\"flex-shrink-0 flex items-center\">\r\n                            <Link to=\"/\">\r\n                                <h1 className=\"text-3xl  text-white\" >Gomoku</h1>\r\n                            </Link>\r\n                        </div>\r\n                        <div className=\"hidden sm:block sm:ml-6\">\r\n                            <div className=\"flex space-x-4\">\r\n                                {/* <!-- Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" --> */}\r\n                                <Link to=\"/\"\r\n                                    className={navOption === '/' ? \"bg-gray-900 text-white px-3 py-2 rounded-md text-md font-medium\" :\r\n                                        \"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-md font-medium\"\r\n                                    }\r\n                                    aria-current=\"page\"\r\n                                >\r\n                                    Lobby\r\n                                </Link>\r\n                                <a href=\"http://localhost:3000/Gomoku/leaderboard\"\r\n                                    className={navOption === '/leaderboard' ? \"bg-gray-900 text-white px-3 py-2 rounded-md text-md font-medium\" :\r\n                                        \"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-md font-medium\"\r\n                                    }\r\n                                    aria-current=\"page\"\r\n                                >\r\n                                    Leaderboard\r\n                                </a>\r\n                                <Link to=\"/localplay\"\r\n                                    className={navOption === '/localplay' ? \"bg-gray-900 text-white px-3 py-2 rounded-md text-md font-medium\" :\r\n                                        \"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-md font-medium\"\r\n                                    }\r\n                                    aria-current=\"page\"\r\n                                >\r\n                                    Local Play\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"absolute inset-y-0 right-0 flex items-center pr-2 sm:static sm:inset-auto sm:ml-6 sm:pr-0\">\r\n                        <h1 className=\"text-white pl-1\">\r\n                            {\r\n                                (userAccount[0]?.userResult?.username) || (userAccount[0]?.result?.username)\r\n                            }\r\n                        </h1>\r\n                        {/* <!-- Profile dropdown --> */}\r\n                        {\r\n                            ((userAccount[0] !== undefined && userAccount[0] !== null)) ? (\r\n                                <div className=\"ml-3 relative\">\r\n                                    <div className=\"mr-2\">\r\n                                        <button type=\"button\"\r\n                                            className=\"bg-white flex text-sm rounded-full focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-800 focus:ring-white\"\r\n                                            id=\"user-menu\"\r\n                                            aria-expanded=\"false\"\r\n                                            aria-haspopup=\"true\"\r\n                                            onClick={() => toggleProfileOpen(!profileOpen)}\r\n                                        >\r\n                                            {\r\n                                                (userAccount[0]?.userResult?.username) ?\r\n                                                    <div dangerouslySetInnerHTML={{ __html: `${userAccount[0]?.userResult?.avatar}` }}></div> :\r\n                                                    <div dangerouslySetInnerHTML={{ __html: `${userAccount[0]?.result?.avatar}` }}></div>\r\n                                            }\r\n                                        </button>\r\n                                    </div>\r\n                                    {/* <!--\r\n                                    Dropdown menu, show/hide based on menu state.\r\n\r\n                                    Entering: \"transition ease-out duration-100\"\r\n                                    From: \"transform opacity-0 scale-95\"\r\n                                    To: \"transform opacity-100 scale-100\"\r\n                                    Leaving: \"transition ease-in duration-75\"\r\n                                    From: \"transform opacity-100 scale-100\"\r\n                                    To: \"transform opacity-0 scale-95\"\r\n                                    --> \r\n                                    */}\r\n                                    {\r\n                                        profileOpen && (\r\n                                            <div className=\"z-50 origin-top-right absolute right-0 mt-2 w-48 rounded-md shadow-lg py-1 bg-white ring-1 ring-black ring-opacity-5 focus:outline-none\" role=\"menu\" aria-orientation=\"vertical\" aria-labelledby=\"user-menu\">\r\n                                                <Link to=\"/profile\" className=\"block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100\" role=\"menuitem\">Profile</Link>\r\n                                                <button className=\" block border-t-2 px-4 py-2 text-sm text-red-700 hover:bg-gray-100 w-full h-full focus:outline-none\"\r\n                                                    role=\"menuitem\"\r\n                                                    onClick={() => handleSignOut()}\r\n                                                    type=\"button\"\r\n                                                >\r\n                                                    Sign Out\r\n                                        </button>\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            ) : (\r\n                                <Link className=\"flex-shrink-0 px-4 py-1 pb-2 text-base font-semibold text-purple-600 bg-white rounded-lg shadow-md hover:bg-gray-200 focus:outline-none focus:ring-2 focus:ring-purple-500 focus:ring-offset-2 focus:ring-offset-purple-200\"\r\n                                    to=\"/login\"\r\n                                >\r\n                                    Login\r\n                                </Link>\r\n                            )\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {/* <!-- Mobile menu, show/hide based on menu state. --> */}\r\n            {\r\n                menuOpen && (\r\n                    <div className=\"sm:hidden\" id=\"mobile-menu\">\r\n                        <div className=\"px-2 pt-2 pb-3 space-y-1 flex justify-evenly\">\r\n                            {/* <!-- Current: \"bg-gray-900 text-white\", Default: \"text-gray-300 hover:bg-gray-700 hover:text-white\" --> */}\r\n                            <Link to=\"/\"\r\n                                className={navOption === '/' ? \"bg-gray-900 text-white px-3 py-2 rounded-md text-md font-medium\" :\r\n                                    \"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-md font-medium\"\r\n                                }\r\n                                aria-current=\"page\"\r\n                                onClick={() => {\r\n                                    toggleMenuOpen(false);\r\n                                }}\r\n                            >\r\n                                Lobby\r\n                            </Link>\r\n                            <a href=\"/leaderboard\"\r\n                                className={navOption === '/leaderboard' ? \"bg-gray-900 text-white px-3 py-2 rounded-md text-md font-medium\" :\r\n                                    \"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-md font-medium\"\r\n                                }\r\n                                aria-current=\"page\"\r\n                                onClick={() => {\r\n                                    toggleMenuOpen(false);\r\n                                }}\r\n                            >\r\n                                Leaderboard\r\n                            </a>\r\n                            <Link to=\"/localplay\"\r\n                                className={navOption === '/localplay' ? \"bg-gray-900 text-white px-3 py-2 rounded-md text-md font-medium\" :\r\n                                    \"text-gray-300 hover:bg-gray-700 hover:text-white px-3 py-2 rounded-md text-md font-medium\"\r\n                                }\r\n                                aria-current=\"page\"\r\n                                onClick={() => {\r\n                                    toggleMenuOpen(false);\r\n                                }}\r\n                            >\r\n                                Local Play\r\n                                </Link>\r\n                        </div>\r\n                    </div>\r\n                )\r\n            }\r\n        </nav>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport './Tile.css';\r\n\r\nexport const Tile = ({ value, handleClick, row, col, isWinningPiece }) => {\r\n    return (\r\n        <div className={`${isWinningPiece ? \"bg-green-100\" : \"\"} tile border-2 border-gray-300 text-2xl lg:h-10 w-10 flex justify-center items-center select-none`}\r\n            onClick={() => handleClick(row, col)}\r\n        >\r\n            {renderSwitch(value)}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction renderSwitch(value) {\r\n    switch(value) {\r\n        case 0:\r\n            return \"✘\";\r\n        case 1:\r\n            return \"〇\";\r\n        case 2:\r\n            return \"▲\";\r\n        case 3:\r\n            return \"♦\";\r\n        default:\r\n            return;\r\n\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport Game from '../../Engine/Game.js';\r\nimport { Tile } from './Tile.js';\r\nimport './Board.css';\r\n\r\nexport const LocalBoard = () => {\r\n\r\n    const game = new Game(15, [0, 1], [], 0, -1, false, {}, {});\r\n\r\n    const [gameModel, updateGameModel] = useState(game);\r\n    const [rerender, toggleRerender] = useState(false);\r\n    const [winningPoints, setWinningPoints] = useState([]);\r\n\r\n    const handleClick = (row, col) => {\r\n        if (gameModel.winner === -1) {\r\n            gameModel.click(row, col);\r\n            updateGameModel(gameModel);\r\n            toggleRerender(!rerender);\r\n            if (gameModel.winner !== -1) {\r\n                let res = findWinningPoints(gameModel);\r\n                setWinningPoints(res);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleReset = () => {\r\n        gameModel.setupNewGame();\r\n        toggleRerender(!rerender);\r\n        setWinningPoints([]);\r\n    }\r\n\r\n    let rearrangedBoard = [];\r\n    for(let row = 0; row < 224; row += 15) {\r\n        rearrangedBoard.push(gameModel.board.flat().slice(row, row+15))\r\n    }\r\n\r\n    return (\r\n        <div className=\"md:container md:mx-auto min-h-screen min-w-full flex justify-center items-center\">\r\n            <div className=\"mb-0 lg:max-w-lg lg:pr-8 xl:pr-6\">\r\n                    <h1>{`Current Turn: ${gameModel.playerArray[gameModel.currentTurn]}`}</h1>\r\n                </div>\r\n            <div className=\"grid grid-cols-15 grid-rows-15\">\r\n                {\r\n                    rearrangedBoard.map((tile, row) => {\r\n                        return tile.map((value, col) => {\r\n\r\n                            // check to see if the current piece is a winning one\r\n                            let isWinningPiece = false;\r\n\r\n                            for (let i = 0; i < winningPoints.length; i++) {\r\n                                if (winningPoints[i].col === col && winningPoints[i].row === row) {\r\n                                    isWinningPiece = true;\r\n                                    break;\r\n                                }\r\n                            }\r\n\r\n                            return <Tile key={`${row}:${col}`}\r\n                                value={value}\r\n                                handleClick={handleClick}\r\n                                row={row}\r\n                                col={col}\r\n                                isWinningPiece={isWinningPiece}\r\n                            />\r\n                        })\r\n                    })\r\n                }\r\n                <button onClick={() => handleReset()}>Reset</button>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n/**\r\n * \r\n * @param {object} gameModel represents the current gameModel\r\n * @returns {array of objects} represents all the pieces that makes a win\r\n */\r\nconst findWinningPoints = (gameModel) => {\r\n    let win1 = gameModel.win1;\r\n    let win2 = gameModel.win2;\r\n\r\n    let rise = win2.row - win1.row;\r\n    let run = win2.col - win1.col;\r\n\r\n    let array = [];         // return array variable\r\n\r\n    let dirCol = 0;\r\n    let dirRow = 0;\r\n    let slope = 0;\r\n\r\n    if (rise === 0) {        // rise = 0 then horizontal check\r\n        dirCol = -1;\r\n\r\n    } else if (run === 0) {  // run = 0 then vertical check\r\n        dirRow = -1;\r\n    } else {\r\n        slope = rise / run; // check what slope it is\r\n        if (slope > 0) {\r\n            dirCol = -1;\r\n            dirRow = -1;\r\n        } else if (slope < 0) {\r\n            dirCol = 1;\r\n            dirRow = -1;\r\n        }\r\n    }\r\n\r\n    // add all winning pieces\r\n    if (slope < 0) {    // special case looping for negative slope\r\n        while (win2.col <= win1.col && win2.row >= win1.row) {\r\n            array.push({\r\n                col: win2.col,\r\n                row: win2.row\r\n            })\r\n            win2.col += dirCol;\r\n            win2.row += dirRow;\r\n        }\r\n    } else {\r\n        while (win2.col >= win1.col && win2.row >= win1.row) {\r\n            array.push({\r\n                col: win2.col,\r\n                row: win2.row\r\n            })\r\n            win2.col += dirCol;\r\n            win2.row += dirRow;\r\n        }\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\n","import React, { useState, useContext } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom';\r\n\r\nimport { GlobalUserContext } from '../../Global/GlobalUser/GlobalUserState.js';\r\n\r\nexport const Login = () => {\r\n\r\n    const { login } = useContext(GlobalUserContext);\r\n    const history = useHistory();\r\n    const [loginData, setloginData] = useState({\r\n        username: '',\r\n        password: '',\r\n    });\r\n    const [error, setError] = useState(false);\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        login(loginData, history, setError);\r\n    };\r\n\r\n    return (\r\n        <div className=\"px-4 py-15 mx-auto mt-10 sm:mt-0 sm:max-w-xl md:max-w-full lg:max-w-screen-xl md:px-24 lg:px-8 lg:py-20\" >\r\n            <div className=\"flex flex-col justify-around lg:flex-row\">\r\n                <div className=\"mb-12 lg:max-w-lg lg:pr-5 lg:mb-0\">\r\n                    <div className=\"max-w-xl mb-6\">\r\n                        <h2 className=\"max-w-lg mb-6 font-sans text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl sm:leading-none\">\r\n                            Welcome To <span className=\"inline-block text-purple-600\">Gomoku</span>\r\n                        </h2>\r\n                        <p className=\"text-base text-gray-700 md:text-lg\">\r\n                            Play Gomoku Against Others and See How You Rank!\r\n                        </p>\r\n                    </div>\r\n                    <hr className=\"mb-6 border-gray-300\" />\r\n                    <div className=\"flex\">\r\n                        <a href=\"https://www.linkedin.com/in/minh100/\" target=\"_blank\" rel=\"noreferrer\" aria-label=\"Play Song\" className=\"mr-3\">\r\n                            <div className=\"flex items-center justify-center w-10 h-10 transition duration-300 transform rounded-full shadow-md bg-deep-purple-accent-400 hover:bg-deep-purple-accent-700 hover:scale-110\">\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"#7C3AED\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14\" />\r\n                                </svg>\r\n                            </div>\r\n                        </a>\r\n                        <div className=\"flex justify-center items-center\">\r\n                            <a href=\"https://www.linkedin.com/in/minh100/\" target=\"_blank\" rel=\"noreferrer\" className=\"text-sm font-semibold\">\r\n                                Minh Truong\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"px-5 pt-6 pb-5 text-center border-2 border-purple-300 rounded lg:w-2/5\">\r\n                    <div className=\"mb-5 font-semibold\">Sign In</div>\r\n                    <form onSubmit={handleLogin}>\r\n                        <div className=\"mb-1 sm:mb-2\">\r\n                            <input\r\n                                placeholder=\"USERNAME\"\r\n                                required\r\n                                type=\"text\"\r\n                                className=\"flex-grow w-full h-12 px-4 mb-2 transition duration-200 bg-white border border-gray-300 rounded shadow-sm appearance-none focus:border-deep-purple-accent-400 focus:outline-none focus:shadow-outline\"\r\n                                name=\"name\"\r\n                                autoComplete=\"off\"\r\n                                value={loginData.username}\r\n                                onChange={(e) => setloginData({ ...loginData, username: e.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-1 sm:mb-2\">\r\n                            <input\r\n                                placeholder=\"PASSWORD\"\r\n                                required\r\n                                type=\"password\"\r\n                                className=\"flex-grow w-full h-12 px-4 mb-2 transition duration-200 bg-white border border-gray-300 rounded shadow-sm appearance-none focus:border-deep-purple-accent-400 focus:outline-none focus:shadow-outline\"\r\n                                name=\"password\"\r\n                                autoComplete=\"off\"\r\n                                value={loginData.password}\r\n                                onChange={(e) => setloginData({ ...loginData, password: e.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex justify-center w-full mb-3\">\r\n                            <div className=\"flex items-center border rounded p-2\">\r\n                                <button className=\"mr-3 font-semibold text-black \">\r\n                                    Google\r\n                                </button>\r\n                                <svg\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    fill=\"black\"\r\n                                    className=\"w-4 h-4\"\r\n                                >\r\n                                    <path d=\"M22,0H2C0.895,0,0,0.895,0,2v20c0,1.105,0.895,2,2,2h11v-9h-3v-4h3V8.413c0-3.1,1.893-4.788,4.659-4.788 c1.325,0,2.463,0.099,2.795,0.143v3.24l-1.918,0.001c-1.504,0-1.795,0.715-1.795,1.763V11h4.44l-1,4h-3.44v9H22c1.105,0,2-0.895,2-2 V2C24,0.895,23.105,0,22,0z\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex justify-center\">\r\n                            <button\r\n                                className=\"mt-4 mb-2 w-40 sm:mb-4 bg-purple-600 rounded transform rotate-180 inline-flex items-center justify-center w-25 h-12 px-6 font-medium tracking-wide text-white transition duration-200 rounded shadow-md bg-deep-purple-accent-400 hover:bg-deep-purple-accent-700 focus:shadow-outline focus:outline-none\"\r\n                                type=\"submit\"\r\n                            >\r\n                                <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"white\">\r\n                                    <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\" />\r\n                                </svg>\r\n                            </button>\r\n                        </div>\r\n                    </form>\r\n                    <div className=\"flex items-center w-full mb-5\">\r\n                        <hr className=\"flex-1 border-gray-300\" />\r\n                        <div className=\"px-3 text-xs text-gray-500 sm:text-sm\">or</div>\r\n                        <hr className=\"flex-1 border-gray-300\" />\r\n                    </div>\r\n                    <div className=\"flex justify-around\">\r\n                        <Link\r\n                            to=\"/signup\"\r\n                            className=\"inline-flex items-center justify-center w-full h-12 px-6 font-semibold transition duration-200 bg-white border border-gray-300 rounded md:w-auto hover:bg-gray-100 focus:shadow-outline focus:outline-none\"\r\n                        >\r\n                            Create Account\r\n                        </Link>\r\n                        <Link\r\n                            to=\"/\"\r\n                            className=\"inline-flex items-center justify-center w-full h-12 px-6 font-semibold transition duration-200 bg-white border border-gray-300 rounded md:w-auto hover:bg-gray-100 focus:shadow-outline focus:outline-none\"\r\n                        >\r\n                            Guest Account\r\n                        </Link>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n            {error ? (\r\n                <div className=\"notification\">\r\n                    <div className={\"text-white px-6 py-4 border-0 rounded relative mb-4 bg-red-500\"}>\r\n                        <span className=\"text-xl inline-block mr-5 align-middle\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                            </svg>\r\n                        </span>\r\n                        <span className=\"inline-block align-middle mr-8\">\r\n                            Invalid Credentials\r\n                        </span>\r\n                        <button\r\n                            className=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-6 outline-none focus:outline-none\"\r\n                            onClick={() => setError(false)}\r\n                        >\r\n                            <span>×</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport { useHistory, Link } from 'react-router-dom';\r\n\r\nimport { GlobalUserContext } from '../../Global/GlobalUser/GlobalUserState.js';\r\n\r\nexport const SignUp = () => {\r\n\r\n    const { createNewUser } = useContext(GlobalUserContext);\r\n    const history = useHistory();\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n    const [createData, setCreateData] = useState({\r\n        username: '',\r\n        lowerUsername: '',\r\n        password: '',\r\n        rating: 0,\r\n        avatar: ''\r\n    })\r\n    const [error, setError] = useState(false);\r\n    const [noMatch, setNoMatch] = useState(false);\r\n\r\n    const getAvatar = async () => {\r\n        const { data } = await axios.get('https://random-word-api.herokuapp.com/word?number=1');\r\n        const avatar = await axios.get(`https://avatars.dicebear.com/api/bottts/${data[0]}.svg?h=35&w=35&r=50`);\r\n        setCreateData({...createData, avatar: avatar.data});\r\n    }\r\n\r\n    useEffect(() => {\r\n        getAvatar();;\r\n    }, [])\r\n\r\n    const handleCreateAccount = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(confirmPassword === createData.password) {\r\n            createNewUser(createData, history, setError);\r\n            setCreateData({\r\n                ...createData,\r\n                password: \"\"\r\n            });\r\n            setConfirmPassword(\"\");\r\n            setNoMatch(false);\r\n        } else {\r\n            setNoMatch(true);\r\n            setCreateData({\r\n                ...createData,\r\n                password: \"\"\r\n            });\r\n            setConfirmPassword(\"\");\r\n            setError(false);\r\n        }\r\n    };    \r\n\r\n    return (\r\n        <section className=\"px-4 py-16 mx-auto sm:max-w-xl md:max-w-full lg:max-w-screen-xl md:px-24 lg:px-8 lg:py-20\">\r\n            <div className=\"flex flex-col justify-around lg:flex-row\">\r\n                <div className=\"px-5 pt-6 pb-5 text-center border-2 border-purple-300 rounded lg:w-2/5\">\r\n                    <div className=\"mb-5 font-semibold\">Create Account</div>\r\n                    <form onSubmit={handleCreateAccount}>\r\n                        <div className=\"mb-1 sm:mb-2\">\r\n                            <input\r\n                                placeholder=\"USERNAME\"\r\n                                required\r\n                                type=\"text\"\r\n                                className=\"flex-grow w-full h-12 px-4 mb-2 transition duration-200 bg-white border border-gray-300 rounded shadow-sm appearance-none focus:border-deep-purple-accent-400 focus:outline-none focus:shadow-outline\"\r\n                                name=\"name\"\r\n                                maxLength=\"26\"\r\n                                autoComplete=\"off\"\r\n                                value={createData.username}\r\n                                onChange={(e) => setCreateData({ ...createData, username: e.target.value, lowerUsername: e.target.value.toLowerCase()})}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-1 sm:mb-2\">\r\n                            <input\r\n                                placeholder=\"PASSWORD\"\r\n                                required\r\n                                type=\"password\"\r\n                                className=\"flex-grow w-full h-12 px-4 mb-2 transition duration-200 bg-white border border-gray-300 rounded shadow-sm appearance-none focus:border-deep-purple-accent-400 focus:outline-none focus:shadow-outline\"\r\n                                name=\"password\"\r\n                                autoComplete=\"off\"\r\n                                value={createData.password}\r\n                                onChange={(e) => setCreateData({ ...createData, password: e.target.value })}\r\n                            />\r\n                        </div>\r\n                        <div className=\"mb-1 sm:mb-2\">\r\n                            <input\r\n                                placeholder=\"CONFIRM PASSWORD\"\r\n                                required\r\n                                type=\"password\"\r\n                                className=\"flex-grow w-full h-12 px-4 mb-2 transition duration-200 bg-white border border-gray-300 rounded shadow-sm appearance-none focus:border-deep-purple-accent-400 focus:outline-none focus:shadow-outline\"\r\n                                name=\"password-confirm\"\r\n                                value={confirmPassword}\r\n                                onChange={(e) => setConfirmPassword(e.target.value)}\r\n                            />\r\n                        </div>\r\n                        <div className=\"flex justify-center w-full mb-3\">\r\n                            <div className=\"flex items-center border rounded p-2\">\r\n                                <button className=\"mr-3 font-semibold text-black \">\r\n                                    Google\r\n                                    </button>\r\n                                <svg\r\n                                    viewBox=\"0 0 24 24\"\r\n                                    fill=\"black\"\r\n                                    className=\"w-4 h-4\"\r\n                                >\r\n                                    <path d=\"M22,0H2C0.895,0,0,0.895,0,2v20c0,1.105,0.895,2,2,2h11v-9h-3v-4h3V8.413c0-3.1,1.893-4.788,4.659-4.788 c1.325,0,2.463,0.099,2.795,0.143v3.24l-1.918,0.001c-1.504,0-1.795,0.715-1.795,1.763V11h4.44l-1,4h-3.44v9H22c1.105,0,2-0.895,2-2 V2C24,0.895,23.105,0,22,0z\" />\r\n                                </svg>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"flex justify-center\">\r\n                            <div className=\"mt-4 mb-2 w-full sm:mb-4 bg-purple-600 rounded\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"inline-flex items-center justify-center w-full h-12 px-6 font-medium tracking-wide text-white transition duration-200 rounded shadow-md bg-deep-purple-accent-400 hover:bg-deep-purple-accent-700 focus:shadow-outline focus:outline-none\"\r\n                                >\r\n                                    Create Account\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                        <Link to=\"/login\">\r\n                            <p className=\"text-xs text-gray-600 sm:text-sm\">\r\n                                Already have an Account? <span className=\"text-purple-600\">Log In</span>\r\n                            </p>\r\n                        </Link>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            {error ? (\r\n                <div className=\"notification\">\r\n                    <div className={\"text-white px-6 py-4 border-0 rounded relative mb-4 bg-red-500\"}>\r\n                        <span className=\"text-xl inline-block mr-5 align-middle\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                            </svg>\r\n                        </span>\r\n                        <span className=\"inline-block align-middle mr-8\">\r\n                            Username Already Taken\r\n                        </span>\r\n                        <button\r\n                            className=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-6 outline-none focus:outline-none\"\r\n                            onClick={() => setError(false)}\r\n                        >\r\n                            <span>×</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n            {noMatch ? (\r\n                <div className=\"notification\">\r\n                    <div className={\"text-white px-6 py-4 border-0 rounded relative mb-4 bg-red-500\"}>\r\n                        <span className=\"text-xl inline-block mr-5 align-middle\">\r\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                                <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\r\n                            </svg>\r\n                        </span>\r\n                        <span className=\"inline-block align-middle mr-8\">\r\n                            Passwords Do Not Match\r\n                        </span>\r\n                        <button\r\n                            className=\"absolute bg-transparent text-2xl font-semibold leading-none right-0 top-0 mt-4 mr-6 outline-none focus:outline-none\"\r\n                            onClick={() => setNoMatch(false)}\r\n                        >\r\n                            <span>×</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </section>\r\n    )\r\n}","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { GlobalUserContext } from '../../Global/GlobalUser/GlobalUserState.js';\r\nimport { SocketContext } from '../../Global/GlobalSocket/Socket.js';\r\n\r\nexport const Leaderboard = () => {\r\n    console.log(\"HELLO\")\r\n    const { users, getAllUsers } = useContext(GlobalUserContext);\r\n    const [userFilter, setUserFilter] = useState(users);\r\n    const [filter, setFilter] = useState(\"\");\r\n    const socket = useContext(SocketContext);\r\n    const [allUsers, setAllUsers] = useState(users);\r\n\r\n    useEffect(() => {\r\n        setUserFilter(users);\r\n        if (filter !== \"\") {\r\n            let userSearch = users.filter(user => user.username.toLowerCase().indexOf(filter.toLowerCase()) !== -1);\r\n            setUserFilter(userSearch);\r\n        }\r\n    }, [filter]);\r\n\r\n\r\n    useEffect(() => {\r\n        getAllUsers();\r\n        socket.on('updateLeaderboard', (allNewUsers) => {\r\n            getAllUsers();\r\n            setAllUsers(allNewUsers);\r\n        })\r\n\r\n        return () => {\r\n            socket.off('updateLeaderboard');\r\n        }\r\n    }, [socket]);\r\n    console.log('allUsers', allUsers);\r\n    console.log('users', users);\r\n\r\n    return (\r\n        <div className=\"container mx-auto px-4 py-4 sm:px-8 max-w-3xl\">\r\n            <div className=\"py-8\">\r\n                <div className=\"flex flex-row mb-1 sm:mb-0 justify-between w-full\">\r\n                    <h2 className=\"pl-2 text-2xl leading-tight font-bold\">\r\n                        Users\r\n                    </h2>\r\n                    <div className=\"text-end pr-2\">\r\n                        <form className=\"flex w-full max-w-sm space-x-3\">\r\n                            <div className=\" relative \">\r\n                                <input type=\"text\" id=\"&quot;form-subscribe-Filter\" className=\"rounded-lg border-transparent flex-1 appearance-none border border-gray-300 w-full py-2 px-4 bg-white text-gray-700 placeholder-gray-400 shadow-sm text-base focus:outline-none focus:ring-2 focus:ring-purple-600 focus:border-transparent\"\r\n                                    placeholder=\"username...\"\r\n                                    autoComplete=\"off\"\r\n                                    value={filter}\r\n                                    onChange={(e) => setFilter(e.target.value)}\r\n                                />\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"-mx-4 sm:-mx-8 px-4 sm:px-8 py-4 overflow-x-auto\">\r\n                    <div className=\"inline-block min-w-full shadow rounded-lg overflow-hidden\">\r\n                        <table className=\"min-w-full leading-normal\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"pl-8 py-3 bg-white font-semibold border-b border-gray-300 text-gray-800 text-left text-sm uppercase\">\r\n                                        Username\r\n                                    </th>\r\n                                    <th scope=\"col\" className=\"px-5 py-3 bg-white font-semibold border-b border-gray-300 text-gray-800 text-left text-sm uppercase\">\r\n                                        Rating\r\n                                    </th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    users && userFilter.length !== 0 ? (\r\n                                        userFilter.sort((a, b) => b.rating - a.rating)\r\n                                            .map(user => {\r\n                                                return (\r\n                                                    <tr key={user._id}>\r\n                                                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-7/12\">\r\n                                                            <div className=\"flex items-center flex-grow-0\">\r\n                                                                <div className=\"flex-shrink-0\">\r\n                                                                    <div dangerouslySetInnerHTML={{ __html: `${user.avatar}` }}></div>\r\n                                                                </div>\r\n                                                                <div className=\"ml-3\">\r\n                                                                    <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                                        {user.username}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                                            <span className=\"relative inline-block px-3 py-1 font-semibold text-purple-900 leading-tight\">\r\n                                                                <span aria-hidden=\"true\" className=\"absolute inset-0 bg-purple-600 rounded-full\">\r\n                                                                </span>\r\n                                                                <span className=\"relative\">\r\n                                                                    <p className=\"text-white whitespace-no-wrap \">\r\n                                                                        {user.rating}\r\n                                                                    </p>\r\n                                                                </span>\r\n                                                            </span>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                    ) : (\r\n                                        users.sort((a, b) => b.rating - a.rating)\r\n                                            .map(user => {\r\n                                                return (\r\n                                                    <tr key={user._id}>\r\n                                                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm w-7/12\">\r\n                                                            <div className=\"flex items-center flex-grow-0\">\r\n                                                                <div className=\"flex-shrink-0\">\r\n                                                                    <div dangerouslySetInnerHTML={{ __html: `${user.avatar}` }}></div>\r\n                                                                </div>\r\n                                                                <div className=\"ml-3\">\r\n                                                                    <p className=\"text-gray-900 whitespace-no-wrap\">\r\n                                                                        {user.username}\r\n                                                                    </p>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </td>\r\n                                                        <td className=\"px-5 py-5 border-b border-gray-200 bg-white text-sm\">\r\n                                                            <span className=\"relative inline-block px-3 py-1 font-semibold text-purple-900 leading-tight\">\r\n                                                                <span aria-hidden=\"true\" className=\"absolute inset-0 bg-purple-600 rounded-full\">\r\n                                                                </span>\r\n                                                                <span className=\"relative\">\r\n                                                                    <p className=\"text-white whitespace-no-wrap \">\r\n                                                                        {user.rating}\r\n                                                                    </p>\r\n                                                                </span>\r\n                                                            </span>\r\n                                                        </td>\r\n                                                    </tr>\r\n                                                )\r\n                                            })\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React, { useState, useEffect, useContext } from 'react'\r\nimport { Tile } from '../Gomoku/Tile.js';\r\n\r\nimport Game from '../../Engine/Game.js';\r\n\r\nimport { SocketContext } from '../../Global/GlobalSocket/Socket.js';\r\n\r\nimport '../Gomoku/Board.css';\r\n\r\nexport const GameBoard = ({ game, currentRoom, profile }) => {\r\n\r\n    let gameInstance = new Game(15, game.playerArray, game.board, game.currentTurn, game.winner, game.draw, game.win1, game.win2, game.ratingWin, game.ratingLose);\r\n\r\n    const [gameModel, updateGameModel] = useState(gameInstance);\r\n    const [rerender, toggleRerender] = useState(false);\r\n    const [winningPoints, setWinningPoints] = useState(findWinningPoints(gameInstance));\r\n    const socket = useContext(SocketContext);\r\n\r\n    const handleClick = (row, col) => {\r\n        if (gameModel.winner === -1 && !gameModel.draw && currentRoom.playerArray[gameModel.currentTurn].username === profile.username) {\r\n            console.log(`Clicked row: ${row} col: ${col}`);\r\n            gameModel.click(row, col);\r\n            updateGameModel(gameModel);\r\n            toggleRerender(!rerender);\r\n\r\n            gameModel.board = gameModel.board.flat();\r\n            socket.emit('updateGame', ({ gameModel, currentRoom }));\r\n\r\n            let rearrangedBoard = [];\r\n            for (let row = 0; row < 224; row += 15) {\r\n                rearrangedBoard.push(gameModel.board.slice(row, row + 15))\r\n            }\r\n            gameModel.board = rearrangedBoard;\r\n            if (gameModel.winner !== -1) {\r\n                let res = findWinningPoints(gameModel);\r\n                setWinningPoints(res);\r\n                socket.emit('updateWinAndLose', ({gameModel, currentRoom}));\r\n                socket.emit('deleteGameRoom', ({currentRoom}));\r\n            }\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        socket.on('sendUpdatedGame', (updatedGame) => {\r\n            let gameInstance = new Game(15, updatedGame.game.playerArray, updatedGame.game.board, updatedGame.game.currentTurn, updatedGame.game.winner, updatedGame.game.draw, updatedGame.game.win1, updatedGame.game.win2, updatedGame.game.ratingWin, updatedGame.game.ratingLose);\r\n            updateGameModel(gameInstance);\r\n            setWinningPoints(findWinningPoints(gameInstance))\r\n        })\r\n\r\n        return () => {\r\n            socket.off('sendUpdatedGame');\r\n        }\r\n    }, [socket])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                gameModel.winner !== -1 ? (\r\n                    <h1 className=\"pl-2 mb-2 text-base text-gray-700 md:text-lg\">Winner: <span className=\"text-purple-600\">{currentRoom.playerArray[gameModel.currentTurn].username}</span></h1>\r\n                ) : (\r\n                    <h1 className=\"pl-2 mb-2 text-base text-gray-700 md:text-lg\">Current Turn: <span className=\"text-purple-600\">{currentRoom.playerArray[gameModel.currentTurn].username}</span></h1>\r\n                )\r\n            }\r\n            <div className=\"grid grid-cols-15 grid-rows-15\">\r\n                {\r\n                    gameModel.board.map((tile, row) => {\r\n                        return tile.map((value, col) => {\r\n\r\n                            // check to see if the current piece is a winning one\r\n                            let isWinningPiece = false;\r\n\r\n                            if(gameModel.winner !== -1) {\r\n                                for (let i = 0; i < winningPoints.length; i++) {\r\n                                    if (winningPoints[i].col === col && winningPoints[i].row === row) {\r\n                                        isWinningPiece = true;\r\n                                        break;\r\n                                    }\r\n                                }\r\n                            }\r\n\r\n                            return <Tile key={`${row}:${col}`}\r\n                                value={value}\r\n                                handleClick={handleClick}\r\n                                row={row}\r\n                                col={col}\r\n                                isWinningPiece={isWinningPiece}\r\n                            />\r\n                        })\r\n                    })\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n/**\r\n * \r\n * @param {object} gameModel represents the current gameModel\r\n * @returns {array of objects} represents all the pieces that makes a win\r\n */\r\nconst findWinningPoints = (gameModel) => {\r\n    let win1 = gameModel.win1;\r\n    let win2 = gameModel.win2;\r\n\r\n    let rise = win2.row - win1.row;\r\n    let run = win2.col - win1.col;\r\n\r\n    let array = [];         // return array variable\r\n\r\n    let dirCol = 0;\r\n    let dirRow = 0;\r\n    let slope = 0;\r\n\r\n    if (rise === 0) {        // rise = 0 then horizontal check\r\n        dirCol = -1;\r\n\r\n    } else if (run === 0) {  // run = 0 then vertical check\r\n        dirRow = -1;\r\n    } else {\r\n        slope = rise / run; // check what slope it is\r\n        if (slope > 0) {\r\n            dirCol = -1;\r\n            dirRow = -1;\r\n        } else if (slope < 0) {\r\n            dirCol = 1;\r\n            dirRow = -1;\r\n        }\r\n    }\r\n\r\n    // add all winning pieces\r\n    if (slope < 0) {    // special case looping for negative slope\r\n        while (win2.col <= win1.col && win2.row >= win1.row) {\r\n            array.push({\r\n                col: win2.col,\r\n                row: win2.row\r\n            })\r\n            win2.col += dirCol;\r\n            win2.row += dirRow;\r\n        }\r\n    } else {\r\n        while (win2.col >= win1.col && win2.row >= win1.row) {\r\n            array.push({\r\n                col: win2.col,\r\n                row: win2.row\r\n            })\r\n            win2.col += dirCol;\r\n            win2.row += dirRow;\r\n        }\r\n    }\r\n\r\n    return array;\r\n}\r\n\r\n","import React, { useState, useEffect, useContext } from 'react'\r\nimport { useLocation, useHistory } from 'react-router-dom';\r\n\r\nimport { GameBoard } from './GameBoard.js';\r\nimport { GlobalRoomContext } from '../../Global/GlobalRoom/GlobalRoomState.js';\r\nimport { GlobalUserContext } from '../../Global/GlobalUser/GlobalUserState.js';\r\nimport { SocketContext } from '../../Global/GlobalSocket/Socket.js';\r\n\r\nexport const GameRoom = () => {\r\n\r\n    const location = useLocation();\r\n    const history = useHistory();\r\n    const { rooms, getAllRooms } = useContext(GlobalRoomContext);\r\n    let currentRoom = rooms.find(room => room.roomName === location.state[0]);\r\n    const [rerender, setRerender] = useState(false);\r\n    const socket = useContext(SocketContext);\r\n\r\n    const { users } = useContext(GlobalUserContext);\r\n    const userAccount = useState(JSON.parse(localStorage.getItem('profile')));\r\n    if(userAccount[0] !== null) {\r\n        var profileUsername = userAccount[0].userResult !== undefined ? userAccount[0].userResult.username : userAccount[0].result.username;\r\n        console.log('users', users);\r\n    }\r\n    var profile = users.find(user => user.username === profileUsername);\r\n\r\n    useEffect(() => {\r\n        // used to avoid upon refreshing losing rooms data\r\n        const getInit = async () => {\r\n            await getAllRooms();\r\n        };\r\n\r\n        getInit();\r\n\r\n        setTimeout(() => {\r\n            checkIfValidUser();\r\n        }, 1600);\r\n\r\n\r\n    }, [rerender]);\r\n\r\n    useEffect(() => {\r\n        socket.on('toGameRoom', (updatedRoom) => {\r\n            currentRoom = updatedRoom;\r\n            setRerender(!rerender);\r\n        });\r\n\r\n    }, [currentRoom, socket])\r\n    console.log('currentRoom', currentRoom)\r\n\r\n    // check if current player by local storage is in current room\r\n    // if not then redirect\r\n    const checkIfValidUser = () => {\r\n        if (!location.state[1].some(user => user._id === profile._id)) {\r\n            console.log('not valid user, going back');\r\n            history.goBack();\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"px-4 py-16 mx-auto sm:max-w-xl md:max-w-full lg:max-w-screen-xl md:px-24 lg:px-8\">\r\n            <div className=\"grid gap-5 row-gap-8 lg:grid-cols-2\">\r\n                <div className=\"flex flex-col justify-start\">\r\n                    <div className=\"max-w-xl mb-6\">\r\n                        <h2 className=\"max-w-lg mb-1 font-sans text-3xl font-bold tracking-tight text-gray-900 sm:text-4xl sm:leading-none\">\r\n                            <span className=\"relative px-1\">\r\n                                <div className=\"absolute inset-x-0 bottom-0 h-3 transform -skew-x-12 bg-green-400\" />\r\n                                <span className=\"relative inline-block text-purple-600\">\r\n                                    {currentRoom && currentRoom.roomName}\r\n                                </span>\r\n                            </span>\r\n                        </h2>\r\n                    </div>\r\n                    <div className=\"grid gap-5 sm:grid-cols-2 lg:grid-rows-2\">\r\n                        {\r\n                            currentRoom && currentRoom.playerArray.map(player => {\r\n                                return (\r\n                                    <div key={player._id} className=\"bg-white w- border-l-4 shadow-sm border-purple-600\">\r\n                                        <div className=\"h-full p-5 border border-l-0 rounded-r flex\">\r\n                                            <div className=\"mr-3 mt-1\" dangerouslySetInnerHTML={{ __html: `${player.avatar}` }} />\r\n                                            <div>\r\n                                                <h6 className=\"mb-2 font-semibold leading-5\">\r\n                                                    {`${player.username}`}\r\n                                                </h6>\r\n                                                <p className=\"text-sm text-gray-900\">\r\n                                                    {\r\n                                                       `Rating: ${player.rating}`\r\n                                                    }\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                        <div className=\"pl-2 text-base text-gray-700 md:text-lg\">\r\n                            {\r\n                                currentRoom &&\r\n                                (\r\n                                    <>\r\n                                        <h1>Win <span className=\"text-green-400\">+{currentRoom.ratingWin}</span> / Lose <span className=\"text-red-500\">-{currentRoom.ratingLose}</span></h1>\r\n                                    </>\r\n                                )\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    {\r\n                        currentRoom !== undefined && currentRoom.playerArray.length >= 2 ? (\r\n                            <GameBoard game={currentRoom.game} currentRoom={currentRoom} profile={profile} />\r\n                        ) : (\r\n                            <h1>Waiting for others to join...</h1>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { GlobalRoomProvider } from './Global/GlobalRoom/GlobalRoomState.js';\r\nimport { GlobalUserProvider } from './Global/GlobalUser/GlobalUserState.js';\r\nimport { Lobby } from './Components/Lobby/Lobby.js';\r\nimport { Navbar } from './Components/Navbar.js';\r\nimport { LocalBoard } from './Components/Gomoku/LocalBoard.js';\r\nimport { Login } from './Components/LandingPage/Login.js';\r\nimport { SignUp } from './Components/LandingPage/SignUp.js';\r\nimport { Leaderboard } from './Components/Leaderboard/Leaderboard.js';\r\nimport { SocketContext, socket } from './Global/GlobalSocket/Socket.js';\r\nimport { GameRoom } from './Components/GameRoom/GameRoom.js';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router basename=\"/Gomoku\">\r\n      <GlobalUserProvider>\r\n        <GlobalRoomProvider>\r\n          <Switch>\r\n            <Route path=\"/login\" component={Login} />\r\n            <Route path=\"/signup\" component={SignUp} />\r\n            <>\r\n              <SocketContext.Provider value={socket} >\r\n                <Navbar />\r\n                <Route exact path=\"/\" component={Lobby} />\r\n                <Route path=\"/leaderboard\" component={Leaderboard} forceRefresh/>\r\n                <Route exact path=\"/localplay\" component={LocalBoard} />\r\n                <Route path=\"/play\" component={GameRoom} />\r\n              </SocketContext.Provider>\r\n            </>\r\n          </Switch>\r\n        </GlobalRoomProvider>\r\n      </GlobalUserProvider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}